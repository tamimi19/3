name: Generate Wrapper & Build APK (No Local PC)

# متى يتم تشغيل الـWorkflow
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    # استخدام أحدث نسخة من Ubuntu
    runs-on: ubuntu-latest

    steps:
      # 1. سحب الكود من المستودع
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Maturin
        run: pip install maturin

      # 2. تثبيت Android NDK لحل مشكلة المترجم
      - name: Install Android NDK
        run: |
          echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "ndk;25.2.9519653" "cmake;3.22.1"


      # 3. إعداد بيئة جافا (JDK)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # --- الجزء الخاص بتوليد الـWrapper بدون كمبيوتر محلي ---
      # 4. تنزيل Gradle 8.2 بشكل مؤقت
      - name: Download Gradle 8.2 temporarily
        run: wget https://services.gradle.org/distributions/gradle-8.2-bin.zip

      # 5. فك ضغط ملف Gradle المؤقت
      - name: Unzip temporary Gradle
        run: unzip gradle-8.2-bin.zip

      # 6. استخدام Gradle المؤقت لتوليد ملفات الـWrapper الخاصة بمشروعك
      - name: Generate project's Gradle Wrapper files
        run: ./gradle-8.2/bin/gradle wrapper --gradle-version 8.2 --distribution-type all
      # --- نهاية جزء التوليد ---

      # الآن بعد أن تم إنشاء ملفات الـWrapper، نستخدمها لبناء المشروع
      # 7. إعطاء صلاحية التنفيذ لملف gradlew الذي تم توليده
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 8. بناء التطبيق باستخدام الـWrapper الخاص بالمشروع
      - name: Build APK with Gradle Wrapper
        run: ./gradlew assembleDebug

      # 9. رفع ملف الـAPK الناتج
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: font-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
